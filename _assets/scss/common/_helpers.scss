body.noscroll {
  overflow: hidden;
  position: fixed;
}

.textreplace {
  display: block;
  padding: 0;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

.textreplace-sr {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

%fullsize, .fullsize {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

%defullsize {
  position: static;
  top: auto;
  right: auto;
  bottom: auto;
  left: auto;
}

.test-overlay {
  -webkit-filter:invert(100%);
  filter:invert(100%);
  filter:progid:DXImageTransform.Microsoft.BasicImage(invert='1');
  position: absolute;
  z-index: 999999;
  opacity: .5;
  top: 0;
  left: 0;
  width: 100%;
}

// Column mixin

@mixin columns($numCols, $gutter: $column-gutter) {
  $n: #{$numCols}#{"n+"}#{$numCols}; // this is dumb
  @include safe-flexbox;
  flex-wrap: wrap;
  > * {
    width: 100%;
    margin-bottom: 2em;
    &:last-child,
    &:nth-child(#{$n}) {
      margin-right: 0;
    }
    flex-shrink: 0;
    width: calc(#{100% / $numCols} - #{$gutter / $numCols * ($numCols - 1)});
    margin-right: $gutter;
    margin-bottom: 0;
  }
}

@mixin safe-flexbox {
  display: flex;
  > * {
    -ms-flex: 0 1 auto;
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
}

@mixin remove-aspect-ratio() {
  position: relative;
  &:before {
    display: none;
  }
}

@function em($pixels, $dens: 1) {
  @return $pixels / $base-font-size / $dens * 1em;
}

@function rem($pixels, $dens: 1) {
  @return $pixels / $base-font-size / $dens * 1rem;
}

@function em2rem($em) {
  @return deunit($em) * 1rem;
}

@function rem2em($rem) {
  @return deunit($rem) * 1em;
}

@function deunit($value) {
  @return $value / ($value * 0 + 1);
}
